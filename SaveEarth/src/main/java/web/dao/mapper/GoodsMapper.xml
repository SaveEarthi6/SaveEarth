<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="web.dao.face.GoodsDao">

	<select id="selectCntAll" resultType="int">
	SELECT count(*) FROM product
	</select>
	
	<select id="selectProdList" resultType="web.dto.Product" parameterType="web.util.Paging">
		SELECT * FROM (
		    SELECT rownum rnum, A.* FROM (
		        SELECT p.*, f.prod_origin_name, f.prod_stored_name
		        FROM product p LEFT OUTER JOIN  prod_file f
		        ON p.prod_no = f.prod_no
		        ORDER BY p.prod_no DESC
		    ) A
		)
		WHERE rnum BETWEEN #{startNo} AND #{endNo}
	</select>
	
	<select id="selectProd" resultType="map" parameterType="int">
			SELECT p.*, f.*
		FROM product p 
		LEFT OUTER JOIN prod_file f
		ON p.prod_no = f.prod_no
		WHERE p.prod_no = #{prodNo}
	
	</select>
	
	<insert id="addCart" parameterType="web.dto.Cart">
	INSERT INTO cart(cart_no,user_no,prod_no,prod_count,prod_opt_no)
	values(cart_seq.nextval,#{userNo},#{prodNo},#{prodCount},#{prodOptNo})
	
	</insert>
	
	<update id="updateCart" parameterType="web.dto.Cart">
	UPDATE cart 
	SET  prod_count=#{prodCount} , prod_opt_no=#{prodOptNo}
	WHERE user_no=#{userNo} and prod_no=#{prodNo} and prod_opt_no=#{prodOptNo}
	
	
	</update>
	

	<select id="selectCartListByuserno" resultType="map" parameterType="int">
		select c.*, p.prod_name, p.prod_price, p.prod_detail, f.prod_origin_name, f.prod_stored_name, o.prod_color, o.prod_size from cart c
		join product p on c.prod_no = p.prod_no
		join prod_option o on o.prod_opt_no = c.prod_opt_no 
		join prod_file f on f.prod_no = c.prod_no
		where c.user_no = #{userNo}
			and c.cart_no = #{cartNo}

	</select>
	
	<select id="existCart" parameterType="web.dto.Cart" resultType="int" >
	SELECT count(*) FROM cart
	where user_no=#{userNo} and prod_no=#{prodNo} and prod_opt_no=#{prodOptNo}
	
	</select>
	
	<select id="getOption" parameterType="int" resultType="map">
	SELECT * FROM  prod_option
	WHERE prod_no=#{prodNo}
	
	
	</select>
	
	<delete id="deleteCartBySelect" parameterType="map">
		DELETE FROM cart
		WHERE user_no = #{userNo} AND cart_no = #{cartNo}
	</delete>
	
	<delete id="deleteCartAll" parameterType="int">
		DELETE FROM cart
		WHERE user_no = #{userNo}
	</delete>
	
	<insert id="insertOrder" parameterType="web.dto.Order">
		{CALL
			BEGIN
				INSERT INTO ordertb (order_no, user_no, order_rec, order_addr_postcode, order_addr, order_addr_detail, order_phone, order_price)
				VALUES (#{orderNo}, #{userNo}, #{orderRec}, #{orderAddrPostcode}, #{orderAddr}, #{orderAddrDetail}, #{orderPhone}, #{orderPrice});
				
				INSERT INTO order_detail
					SELECT order_detail_seq.nextval, #{orderNo}, prod_no, cart_no, prod_opt_no
					FROM cart
					WHERE user_no = #{userNo};
			END
		}
	</insert>
	
	<select id="selectOrderList" parameterType="int" resultType="web.dto.Order">
		SELECT * FROM ordertb
		WHERE user_no = #{userNo}
	</select>
	
	<update id="updateAmount" parameterType="map">
		UPDATE cart
		SET prod_count = #{prodCount}
		WHERE cart_no = #{cartNo}
	</update>
	
	
	
	<select id="getProdinfo" parameterType="int" resultType="web.dto.Product">
	select * FROM product
	where prod_no=#{prodNo}
	</select>
	
	<select id="getProdopt" parameterType="int" resultType="web.dto.ProdOption">
	select * FROM prod_option
	where prod_opt_no=#{prodOptNo}
	</select>
	
	<select id="selectCartListBySelect" parameterType="map" resultType="map">
		select c.*, p.prod_name, p.prod_price, p.prod_detail, f.prod_origin_name, f.prod_stored_name, o.prod_color, o.prod_size from cart c
		join product p on c.prod_no = p.prod_no
		join prod_option o on o.prod_opt_no = c.prod_opt_no 
		join prod_file f on f.prod_no = c.prod_no
		where c.user_no = #{userNo}
	</select>
	
	
	<insert id="insertordertb" parameterType="web.dto.Ordertb" >
	insert into ordertb(ORDER_NO,USER_NO,ORDER_REC,ORDER_ADDR_POSTCODE,ORDER_ADDR,ORDER_ADDR_DETAIL,ORDER_PHONE,ORDER_PRICE)
	VALUES(#{orderNo},#{userNo},#{orderRec},#{orderAddrPostcode},#{orderAddr},#{orderAddrDetail},#{orderPhone},#{orderPrice})
	</insert>
</mapper>